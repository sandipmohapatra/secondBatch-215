1)Jasmine is an open-source javascript framework capable of testing any kind of javascript application. 
2)Jasmine follows BDD (behavior Driven Development) procedure to ensure that each line
in javascript statement is propertly unit tested.
3)Jasmine provides a small syntax to test the smallest unit of application.
4)In unit testing we test small function part by part instead of testing the whole application.
---------------------------------------------------------------------------------------------------------------------------------
we have to install jasmine software to do the testing.
After installation we have we will see 
1)lib folder :- It contains some javascript library.It is used to test the application. 
2)spec folder:- In this we have to write the test cases. 
3)src folder:-In this we will have the program to test.
4)license
5)SpecRunner.html:-we have to mention both the files location.Which will test the application and display the report.
example:-
<!-- include source files here... -->
  <script src="src/Player.js"></script>
  
  <!-- include spec files here... -->
  <script src="spec/SpecHelper.js"></script> 
--------------------------------------------------------------------------------
to download we have to goto the official website :- https://github.com/jasmine/jasmine/releases
We have to download the standalone vesion.
-----------------------------Example-1------------------------------------------
source file:-
test1.js
--------------
var helloworld = function()
{
return 'Hello every one welcome to Jasmine';
};
----------------------------------------------------------------------------
spec file:-
----------------
spect1.js
-----------------
describe("Hello every one welcome to Jasmine", function()
{
it("should return Hello every one welcome to Jasmine", function()
{
expect(helloworld()).toEqual('Hello every one welcome to Jasmine');
});
});
----------------------------------------------------------------------------------------------------
<!-- include source files here... -->
  <script src="src/test1.js"></script>
  
  <!-- include spec files here... -->
  <script src="spec/spec1.js"></script> 
----------------------------------------------------------------------------
we have 2 parts 
1)expected output
2)real output 
if both match then the test is successful otherwise it will be failure.
------------------------------------------------------------------------------------------------------
step-1:-download the file.(https://github.com/jasmine/jasmine/releases)
------------------------------------------------------------------------------------------------------------------
Example-2
-------------------
calculator = function() {};

calculator.prototype.sum = function(number1, number2)
{
return number1 + number2;
}
------------------------------------------------------------
describe("calculator",function(){
    var cal;
    beforeEach(function()
    {
        cal = new calculator();
    });
describe("we use the calculator for basic math operation",function()
{
it("should be able to add 3 and 5",function()
{
expect(cal.sum(3,5)).toEqual(8);
});
});
});

--------------------------------------------------------------------------------------------
beforeEach():-The beforeEach function is called once before each spec in the describe()  in which itt is called.
afterEach():-This will called once after each spec.
--------------------------------------------------------------------------------
Example-3
------------------
calculator = function() {};

calculator.prototype.sum = function(number1, number2)
{
return number1 + number2;
}

calculator.prototype.sub = function(number1, number2)
{
return number1 - number2;
}

calculator.prototype.mul = function(number1, number2)
{
return number1 * number2;
}

calculator.prototype.div = function(number1, number2)
{
return number1 / number2;
}
-------------------------------------------------------------------------------
describe("calculator",function()
{
    var cal;
    beforeEach(function()
    {
        cal = new calculator();
    });
describe("we use the calculator for basic math operation",function()
{

it("should be able to add 3 and 5",function()
{
expect(cal.sum(3,5)).toEqual(8);
});

it("should be able to subtract 3 and 5",function()
{
expect(cal.sub(3,5)).toEqual(-2);
});

it("should be able to multiply 3 and 5",function()
{
expect(cal.mul(3,5)).toEqual(15);
});

it("should be able to divide 15 and 5",function()
{
expect(cal.div(15,5)).toEqual(3);
});

});
});

-------------------------------------------------------------------------------------
















 


